// 05-09
// If you have any doubts or confusion do let me know.
// Keep Learning



#include <bits/stdc++.h>
using namespace std;

int main(){
    deque<int> dq;
    // 10 20 
    dq.push_back(10);
    dq.push_back(20);
    dq.push_back(30);
    dq.push_front(1);
    for(int i: dq){
        cout << i << " ";
    }
    cout << endl;
    dq.pop_front();
    dq.pop_back();
    for(int i: dq){
        cout << i << " ";
    }
    cout << endl;
    
    return 0;
}


#include <bits/stdc++.h>
using namespace std;

int main(){
    priority_queue<int> pq; // specify the type by default its max heap
    pq.push(14);
    pq.push(414);
    pq.push(114);
    pq.push(104);
    //cout << pq.front() << endl;
    while(pq.size() > 0){
        cout << pq.top() << " ";
        pq.pop();
    }
    return 0;
}
#include <bits/stdc++.h>
using namespace std;

int main(){
    priority_queue<int, vector<int>, greater<int>> pq; // specify the type by default its max heap
    pq.push(14);
    pq.push(414);
    pq.push(114);
    pq.push(104);
    //cout << pq.front() << endl;
    while(pq.size() > 0){
        cout << pq.top() << " ";
        pq.pop();
    }
    return 0;
}

#include <bits/stdc++.h>
using namespace std;

struct box{
    int len;
    int wid;
};

int main(){
    queue<box> q;
    int n = 4;
    for(int i = 0; i < n; i++){
        box b;
        cin >> b.len >> b.wid;
        q.push(b);
    }
    while(q.size() > 0){
        cout << q.front().len << " " << q.front().wid;
        cout << endl;
        q.pop();
    }
    return 0;
}
